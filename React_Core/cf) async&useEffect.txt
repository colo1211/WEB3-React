⭐ [async] vs [sync]
async : 비동기 (비순차적으로 실행) 
sync : 동기 (순차적으로 실행) 

JS는 기본적으로 sync 프로그래밍 언어이다. 

예를 들면, 
console.log(1+1); 
console.log(1+2); 
console.log(1+3); 

출력하면 위에서 부터 순서대로 
2
3
4
가 출력 될 것이다. 

하지만 JS에서 특정 함수를 사용하게 되면 async (비동기, 비순차) 적으로 코드가 동작한다. 
⚠ 특정함수 : state변경함수( ), ajax, 이벤트리스너, setTimeout 함수들을 쓸 때 그런 현상이 일어남
예를들면 ajax 같은 경우는 서버로부터 get요청을 받아올때 까지 기다린다. 
그 와중 JS에서는 기다리는 동안에 쉬고 있는 것이 아니라 밑에 있는 코드들을 먼저 동작시킨다. 

이를 해결하는 방법은 useEffect 이다. 
정확히 동기적으로, 순차적으로 실행하고 싶을 때, useEffect 를 잘 작성하면 특정 state가 변경될 때, 
useEffect를 실행 할 수 있다. 


useEffect(( )=>{
  // 두번째 인자에 적힌 state가 변경된 이후에 실행시켜 달라. 
}, [ state명 ])

